import numpy as np
from numpy import random

arr = np.array([1, 2, 3, 4, 5])

print(arr)
print(type(arr))

arr0 = np.array(43)
print(arr0)

d3 = np.array([[[1, 2], [1, 3]], [[2, 3], [2, 1]]])
print(d3.ndim)

arr = np.array([1, 2, 3, 4], ndmin=5)
print(arr)

print(np.__version__)

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])
print(arr[0, 1])

arr = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])
print(arr[1, -1])

arr = np.array([1, 2, 3, 4, 5, 6, 7])

print(arr[-3:])
print(arr[::3])
print(arr[1:5:2])

arr = np.array([1, 2, 3], dtype="i4")

print(arr.dtype)
print(arr)

arr = np.array([1.1, 2.1, 3.1])

newarr = arr.astype(bool)
print(newarr)

arr = np.array([1, 2, 3, 4, 5])

x = arr.copy()
y = arr.view()

print(x.base)
print(y.base)

print(y.shape)

arr = np.array([[1, 2, 3], [4, 5, 6]])
# flattening
newarr = arr.reshape(-1)
print(newarr)

arr = np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])

# nditer
print(arr)
print("nditer")
for x in np.nditer(arr):
    print(x)

arr = np.array([1, 2, 3])

print("nditer buffered")
for x in np.nditer(arr, flags=['buffered'], op_dtypes=['S']):
    print(x)

# iterating with different step size

arr = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])

for x in np.nditer(arr[:, ::2]):
    print(x)

arr = np.array([1, 2, 3])

print("idx")
for idx, x in np.ndenumerate(arr):
    print(idx, x)

arr1 = np.array([[1, 2], [3, 4]])

arr2 = np.array([[5, 6], [7, 8]])
print(arr1)
print(arr2)
print(arr1.shape)
arr = np.concatenate((arr1, arr2), axis=1)

print(arr)
print(arr.shape)
arr = np.concatenate((arr1, arr2), axis=0)
print(arr)
print(arr.shape)

arr1 = np.array([1, 2, 3])

arr2 = np.array([4, 5, 6])

arr = np.stack((arr1, arr2), axis=0)

print(arr)

print(random.randint(10))
